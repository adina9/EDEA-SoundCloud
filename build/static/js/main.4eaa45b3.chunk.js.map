{"version":3,"sources":["services/async-storage.service.js","services/trackService.js","store/actions/trackAction.js","services/prefsService.js","store/actions/prefsAction.js","cmps/TrackPlayer.jsx","cmps/NoResults.jsx","pages/TrackDetails.jsx","cmps/BtnsControl.jsx","pages/RecentSearches.jsx","cmps/AppSearch.jsx","cmps/Loading.jsx","cmps/TrackPreview.jsx","cmps/TrackList.jsx","pages/TrackApp.jsx","cmps/ToggleWrapper.jsx","App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","store/reducers/prefReducer.js","store/reducers/trackReducer.js","store/store.js","index.js"],"names":["asyncStorageService","query","get","entityType","entityKey","then","entities","find","entity","key","post","newEntity","push","_save","put","updatedEntity","idx","findIndex","_id","splice","postMany","newEntities","JSON","parse","localStorage","getItem","Promise","resolve","setItem","stringify","axios","Axios","create","withCredentials","TRACK_KEY","SEARCH_KEY","trackService","choose","querySearches","saveSearch","q","a","tracks","storageArr","length","accArr","reduce","acc","track","includes","data","console","log","searches","search","queryTracks","dispatch","type","chooseTrack","choosedTrack","setLastSearch","isIncluded","PREFS_KEY","prefsService","loadPrefs","setDisplay","setMode","prefs","Array","isArray","isDarkMode","isTile","_savePrefs","val","TrackPlayer","className","width","src","frameBorder","NoResults","txt","icon","to","TrackDetails","useState","isImageClicked","setIsImageClicked","currTrack","useSelector","state","trackModule","prefsModule","map","_","onClick","pictures","medium","large","alt","name","BtnsControl","backOrNext","onSetDisplay","isOnMainPage","arrowIcons","displayIcons","arrow","style","color","RecentSearches","history","currSearches","setCurrSearches","useDispatch","useEffect","slice","_s","researchTrack","_searches","lastIdx","indexOf","AppSearch","onSearch","lastSearch","searchBy","setSearchBy","inputRef","useRef","current","focus","onSubmit","ev","preventDefault","ref","value","placeholder","onChange","target","autoComplete","Loading","TrackPreview","onChooseTrack","TrackList","TrackApp","pathname","useLocation","currTracks","setCurrTracks","substr","activeClassName","titleAccess","path","exact","component","_tracks","ToggleWrapper","onUpdate","backgroundColor","App","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","myStore","subscribe","getState","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4eaa45b3.chunk.js","sourcesContent":["export const asyncStorageService = {\r\n  query,\r\n  get,\r\n  post,\r\n  put,\r\n  postMany,\r\n}\r\n\r\n\r\n\r\nfunction query(entityType) {\r\n  var entities = JSON.parse(localStorage.getItem(entityType)) || []\r\n  return Promise.resolve(entities)\r\n}\r\n\r\nfunction get(entityType, entityKey) {\r\n  return query(entityType)\r\n    .then(entities => {\r\n      return entities.find(entity => entity.key === entityKey)\r\n    })\r\n}\r\n\r\nfunction post(entityType, newEntity) {\r\n  return query(entityType)\r\n    .then(entities => {\r\n      entities.push(newEntity);\r\n      _save(entityType, entities)\r\n      return entities;\r\n    })\r\n}\r\n\r\nfunction postMany(entityType, newEntities) {\r\n  return query(entityType)\r\n    .then(entities => {\r\n      entities.push(...newEntities);\r\n      _save(entityType, entities)\r\n      return entities;\r\n    })\r\n}\r\n\r\nfunction put(entityType, updatedEntity) {\r\n  return query(entityType)\r\n    .then(entities => {\r\n      const idx = entities.findIndex(entity => entity._id === updatedEntity._id);\r\n      entities.splice(idx, 1, updatedEntity)\r\n      _save(entityType, entities)\r\n      return entities;\r\n    })\r\n}\r\n\r\n\r\nfunction _save(entityType, entities) {\r\n  localStorage.setItem(entityType, JSON.stringify(entities))\r\n}\r\n","import Axios from 'axios'\r\nimport { asyncStorageService } from './async-storage.service'\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: false\r\n})\r\n\r\n\r\nconst TRACK_KEY = 'trackDB'\r\nconst SEARCH_KEY = 'searchDB'\r\n\r\nexport const trackService = {\r\n    query,\r\n    choose,\r\n    querySearches,\r\n    saveSearch\r\n}\r\n\r\nasync function query(q) {\r\n    \r\n    var tracks = []\r\n    var storageArr = await asyncStorageService.query(TRACK_KEY)\r\n    if (storageArr.length) {\r\n        let accArr = storageArr.reduce((acc, track) => {\r\n            if (track.key.includes(q)) acc.push({ ...track })\r\n            return acc\r\n        }, [])\r\n        if (accArr.length >= 6) {\r\n            return Promise.resolve(accArr)\r\n        } else {\r\n            const { data } = await axios.get(`https://api.mixcloud.com/search/?q=${q}&type=cloudcast`)\r\n            tracks = [...data.data]\r\n            asyncStorageService.postMany(TRACK_KEY, tracks)\r\n            return Promise.resolve(tracks)\r\n        }\r\n    }\r\n    else {\r\n        const { data } = await axios.get(`https://api.mixcloud.com/search/?q=${q}&type=cloudcast`)\r\n        tracks = [...data.data]\r\n        console.log('storageArr after call:', tracks)\r\n        asyncStorageService.postMany(TRACK_KEY, tracks)\r\n        return Promise.resolve(tracks)\r\n    }\r\n}\r\n\r\nasync function querySearches() {\r\n    try {\r\n        const searches = await asyncStorageService.query(SEARCH_KEY)\r\n        return Promise.resolve(searches)\r\n    } catch (err) {\r\n        console.log('err in trackAction in loadSearches:', err);\r\n    }\r\n}\r\n\r\nasync function choose(track) {\r\n    return Promise.resolve(await asyncStorageService.get(TRACK_KEY, track.key))\r\n}\r\n\r\nasync function saveSearch(search) {\r\n    const searches = await asyncStorageService.post(SEARCH_KEY, search)\r\n    return Promise.resolve(searches)\r\n}","import { trackService } from \"../../services/trackService\";\r\n\r\n\r\nexport function queryTracks(q) {\r\n    return async dispatch => {\r\n        try {\r\n            const tracks = await trackService.query(q)\r\n            dispatch({ type: 'SET_TRACKS', tracks })\r\n        } catch (err) {\r\n            console.log('err in trackAction in loadTracks:', err);\r\n        }\r\n    }\r\n}\r\nexport function chooseTrack(track) {\r\n    return async dispatch => {\r\n        try {\r\n            const choosedTrack = track ? await trackService.choose(track) : null\r\n            dispatch({ type: 'SET_TRACK', choosedTrack })\r\n        } catch (err) {\r\n            console.log('err in trackAction in loadTracks:', err);\r\n        }\r\n    }\r\n}\r\nexport function loadSearches() {\r\n    return async dispatch => {\r\n        try {\r\n            const searches = await trackService.querySearches()\r\n            dispatch({ type: 'SET_SEARCHES', searches })\r\n        } catch (err) {\r\n            console.log('err in trackAction in loadTracks:', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function setLastSearch(isIncluded, search) {\r\n    return async dispatch => {\r\n        try {\r\n            var searches = !isIncluded ? await trackService.saveSearch(search) : await trackService.querySearches()\r\n            dispatch({ type: 'SET_SEARCHES', searches })\r\n            dispatch({ type: 'SET_LAST_SEARCH', search })\r\n        } catch (err) {\r\n            console.log('err in trackAction in setLastSearch:', err);\r\n        }\r\n    }\r\n}\r\n","import { asyncStorageService } from \"./async-storage.service\"\r\n\r\nconst PREFS_KEY = 'prefsDB'\r\n\r\nexport const prefsService = {\r\n    loadPrefs,\r\n    setDisplay,\r\n    setMode\r\n}\r\n\r\nasync function loadPrefs() {\r\n    try {\r\n        var prefs = await asyncStorageService.query(PREFS_KEY)\r\n        if (Array.isArray(prefs)) {\r\n            prefs = { isDarkMode: false, isTile: false }\r\n        }\r\n        return _savePrefs(prefs)\r\n    } catch (err) {\r\n        console.log('err in prefsAction in loadPrefs:', err);\r\n    }\r\n}\r\n\r\nasync function setDisplay(val) {\r\n    const prefs = await asyncStorageService.query(PREFS_KEY)\r\n    prefs.isTile = val\r\n    return _savePrefs(prefs)\r\n}\r\n\r\nasync function setMode(val) {\r\n    const prefs = await asyncStorageService.query(PREFS_KEY)\r\n    prefs.isDarkMode = val\r\n    return _savePrefs(prefs)\r\n}\r\n\r\nasync function _savePrefs(prefs) {\r\n    localStorage.setItem(PREFS_KEY, JSON.stringify(prefs))\r\n    return Promise.resolve(prefs)\r\n}\r\n","import { prefsService } from \"../../services/prefsService\";\r\n\r\nexport function loadPrefs() {\r\n    return async dispatch => {\r\n        try {\r\n            const prefs = await prefsService.loadPrefs()\r\n            dispatch({ type: 'SET_PREFS', prefs })\r\n        } catch (err) {\r\n            console.log('err in trackAction in loadTracks:', err);\r\n        }\r\n    }\r\n}\r\nexport function setDisplay(val) {\r\n    return async dispatch => {\r\n        try {\r\n            const prefs = await prefsService.setDisplay(val)\r\n            dispatch({ type: 'SET_PREFS', prefs })\r\n        } catch (err) {\r\n            console.log('err in trackAction in loadTracks:', err);\r\n        }\r\n    }\r\n}\r\nexport function setMode(val) {\r\n    return async dispatch => {\r\n        try {\r\n            const prefs = await prefsService.setMode(val)\r\n            dispatch({ type: 'SET_PREFS', prefs })\r\n        } catch (err) {\r\n            console.log('err in trackAction in loadTracks:', err);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nexport const TrackPlayer = ({ track, isDarkMode }) => {\r\n\r\n    return (\r\n        <div className=\"track-player\">\r\n            <iframe className='iframe-player' width=\"100%\" src={`https://www.mixcloud.com/widget/iframe/?feed=https://www.mixcloud.com${track.key}&hide_cover=2&hide_artwork=1&light=${!isDarkMode}`} frameBorder=\"0\"\r\n            ></iframe>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport const NoResults = ({ txt, icon }) => {\r\n    return (\r\n        <div className=\"no-search flex col pos a j-between a-center\">\r\n            {icon}\r\n            <p>{txt}</p>\r\n            <Link to='/' className=\"back-to-tracks flex a-center\">\r\n                <small>back to tracks</small>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//icons:\r\nimport AudiotrackRoundedIcon from '@material-ui/icons/AudiotrackRounded';\r\nimport KeyboardBackspaceRoundedIcon from '@material-ui/icons/KeyboardBackspaceRounded';\r\n\r\n//cmps:\r\nimport { TrackPlayer } from '../cmps/TrackPlayer'\r\nimport { NoResults } from '../cmps/NoResults';\r\n\r\nexport const TrackDetails = () => {\r\n\r\n    const [isImageClicked, setIsImageClicked] = useState(false)\r\n    const { currTrack } = useSelector(state => state.trackModule)\r\n    const { isDarkMode } = useSelector(state => state.prefsModule)\r\n\r\n    if (!currTrack) return <NoResults\r\n        txt='No track has been choosed'\r\n        icon={<AudiotrackRoundedIcon />}\r\n    />\r\n    //IMPORTANT: currTrack is not being saved in the localstorage\r\n\r\n    return (\r\n        <div className='track-details flex col j-around'>\r\n            <Link to='/' className='details-link'><KeyboardBackspaceRoundedIcon /></Link>\r\n            <div className=\"imgs-container flex a-center j-between\">\r\n                {[...Array(3)].map((_, idx) =>\r\n                    <img onClick={idx === 1 ? () => setIsImageClicked(true) : ''} src={idx !== 1 ? currTrack.pictures.medium : currTrack.pictures.large} alt={currTrack.name} />)}\r\n            </div>\r\n            {isImageClicked ?\r\n                <TrackPlayer track={currTrack} isDarkMode={isDarkMode} />\r\n                : <div className='click-img-elmnt'><p>click the central image to turn on the music</p></div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\n//icons:\r\nimport FormatListBulletedRoundedIcon from '@material-ui/icons/FormatListBulletedRounded';\r\nimport DashboardRoundedIcon from '@material-ui/icons/DashboardRounded';\r\nimport ArrowForwardRoundedIcon from '@material-ui/icons/ArrowForwardRounded';\r\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\r\n\r\n\r\nexport const BtnsControl = ({ backOrNext, onSetDisplay, isTile, isOnMainPage }) => {\r\n\r\n    const arrowIcons = [<ArrowBackRoundedIcon />, <ArrowForwardRoundedIcon />]\r\n    const displayIcons = [<FormatListBulletedRoundedIcon />, <DashboardRoundedIcon />]\r\n\r\n\r\n    return (\r\n        <div className='btns-control flex j-between pos a'>\r\n            <div className=\"arrow-btns flex j-between\">\r\n                {arrowIcons.map((arrow, idx) => <div key={idx} onClick={() => backOrNext(!!idx)}>{arrow}</div>)}\r\n            </div>\r\n\r\n            {isOnMainPage && <div className=\"disaply-btns flex j-between\">{displayIcons.map((icon, idx) =>\r\n                <div style={{ color: isTile === !!idx ? 'black' : '' }} key={idx} onClick={() => onSetDisplay(!!idx)}>{icon}</div>\r\n            )}</div>}\r\n        </div >\r\n    );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n//icons:\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport EventNoteRoundedIcon from '@material-ui/icons/EventNoteRounded';\r\n\r\n//actions:\r\nimport { loadSearches, setLastSearch } from \"../store/actions/trackAction\";\r\n\r\n//cmps:\r\nimport { BtnsControl } from '../cmps/BtnsControl';\r\nimport { NoResults } from '../cmps/NoResults';\r\n\r\n\r\nexport const RecentSearches = ({ history: { push } }) => {\r\n\r\n    const [currSearches, setCurrSearches] = useState([])\r\n\r\n    const { searches } = useSelector(state => state.trackModule)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(loadSearches())\r\n        setCurrSearches(searches.slice(0, 5))\r\n    }, [])\r\n\r\n    const researchTrack = (search) => {\r\n        const isIncluded = searches.find(_s => _s === search)\r\n        dispatch(setLastSearch(isIncluded, search))\r\n        push('/')\r\n    }\r\n\r\n    const onBackOrNext = (val) => {\r\n        var _searches\r\n        if (val) {\r\n            const lastIdx = searches.indexOf(currSearches[currSearches.length - 1]) + 1\r\n            _searches = searches.slice(lastIdx, lastIdx + 5)\r\n        } else {\r\n            const lastIdx = searches.indexOf(currSearches[0])\r\n            _searches = searches.slice(lastIdx - 5, lastIdx)\r\n        }\r\n        if (_searches.length) setCurrSearches(_searches)\r\n        else return\r\n    }\r\n\r\n    return (\r\n        !searches.length ? <NoResults txt='no recent searches yet...' icon={<EventNoteRoundedIcon />} />\r\n            :\r\n            <div className='recent-searches flex col'>\r\n                <p>Your searches</p>\r\n                {currSearches.map((search, idx) => <div className='search-preview' onClick={() => researchTrack(search)}\r\n                    key={idx}>\r\n                    <SearchRoundedIcon />\r\n                    {search}</div>)}\r\n                <BtnsControl backOrNext={onBackOrNext} isOnMainPage={false} />\r\n            </div>\r\n    );\r\n};\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nexport const AppSearch = ({ onSearch, saveSearch, lastSearch }) => {\r\n\r\n    const [searchBy, setSearchBy] = useState('')\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus()\r\n        setSearchBy(lastSearch)\r\n    }, [lastSearch])\r\n\r\n    const handleChange = ev => {\r\n        let search = ev.target.value\r\n        setSearchBy(search)\r\n    }\r\n\r\n    const onDoSearch = ev => {\r\n        ev.preventDefault()\r\n        if (!searchBy) return\r\n        onSearch(searchBy)\r\n        saveSearch(searchBy)\r\n    }\r\n\r\n    return (\r\n        <section className='app-search' >\r\n            <form onSubmit={onDoSearch}>\r\n                <input ref={inputRef} type=\"text\" value={searchBy} name=\"name\" placeholder=\"Search...\" onChange={handleChange} autoComplete=\"off\" />\r\n                <button className={`search-icon ${searchBy ? 'isActive' : ''}`}><SearchIcon /></button>\r\n            </form>\r\n        </section>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className='loading'>\r\n            <h3 style={{ color: 'white' }}>Loading...</h3>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\n\r\nexport const TrackPreview = ({ track, onChooseTrack }) => {\r\n    return (\r\n        <div className='track-preview' onClick={async () => await onChooseTrack(track)}>\r\n            <AudiotrackIcon />\r\n            <div className='pos a'>\r\n                <img src={track.pictures.medium} alt={track.name} />\r\n            </div>\r\n            <p>{track.name}</p>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Loading } from './Loading';\r\nimport { TrackPreview } from './TrackPreview';\r\n\r\nexport const TrackList = ({ tracks, isTile, onChooseTrack }) => {\r\n    if (!tracks.length) return <Loading />\r\n    return (\r\n        <div className={`track-list flex col pos r ${isTile ? 'tile' : ''}`}>\r\n            {tracks.map((track, idx) => <TrackPreview onChooseTrack={onChooseTrack} key={idx} track={track} />)}\r\n        </div>\r\n    );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Switch, Route, NavLink, useLocation } from 'react-router-dom'\r\n\r\n//icons:\r\nimport YoutubeSearchedForRoundedIcon from '@material-ui/icons/YoutubeSearchedForRounded';\r\n\r\n//actions:\r\nimport { queryTracks, chooseTrack, setLastSearch } from \"../store/actions/trackAction\";\r\nimport { loadPrefs, setDisplay } from \"../store/actions/prefsAction\";\r\n\r\n//cmps:\r\nimport { TrackDetails } from './TrackDetails';\r\nimport { RecentSearches } from './RecentSearches';\r\nimport { AppSearch } from \"../cmps/AppSearch\";\r\nimport { BtnsControl } from \"../cmps/BtnsControl\";\r\nimport { TrackList } from \"../cmps/TrackList\";\r\n\r\nexport const TrackApp = ({ history: { push } }) => {\r\n\r\n    var { pathname } = useLocation()\r\n\r\n    const dispatch = useDispatch()\r\n    const { tracks, currTrack, searches, lastSearch } = useSelector(state => state.trackModule)\r\n    const { isTile } = useSelector(state => state.prefsModule)\r\n\r\n    const [currTracks, setCurrTracks] = useState([])\r\n\r\n    //two seperate useEffect just for clarifying\r\n    useEffect(() => {\r\n        dispatch(queryTracks(lastSearch))\r\n        setCurrTracks(tracks.slice(0, 6))\r\n        dispatch(loadPrefs())\r\n        if (pathname.length === 1) dispatch(chooseTrack(null))\r\n    }, [lastSearch, pathname])\r\n\r\n    useEffect(() => {\r\n        if (currTrack) push(`/track/${currTrack.key.substr(1)}`)\r\n        if (tracks?.length) setCurrTracks(tracks.slice(0, 6))\r\n    }, [currTrack, tracks])\r\n\r\n\r\n    const onQueryTracks = (searchBy) => {\r\n        dispatch(queryTracks(searchBy))\r\n    }\r\n\r\n    const onSaveSearch = (search) => {\r\n        dispatch(setLastSearch(searches.includes(search), search))\r\n    }\r\n\r\n    const onChooseTrack = (track) => {\r\n        dispatch(chooseTrack(track))\r\n    }\r\n    const onSetDisplay = async (val) => dispatch(setDisplay(val))\r\n\r\n    const onBackOrNext = (val) => {\r\n        var _tracks\r\n        if (val) {\r\n            const lastIdx = tracks.indexOf(currTracks[currTracks.length - 1]) + 1\r\n            _tracks = tracks.slice(lastIdx, lastIdx + 6)\r\n        } else {\r\n            const lastIdx = tracks.indexOf(currTracks[0])\r\n            _tracks = tracks.slice(lastIdx - 6, lastIdx)\r\n        }\r\n        if (_tracks.length) setCurrTracks(_tracks)\r\n        else return\r\n    }\r\n\r\n    const isOnMainPage = () => pathname.length === 1\r\n\r\n    return (\r\n        <section className=\"track-app  flex a-center col pos r\">\r\n            {isOnMainPage() && <AppSearch onSearch={onQueryTracks} saveSearch={onSaveSearch} lastSearch={lastSearch} />}\r\n            {pathname.length < 10 && <NavLink to='/searches' activeClassName=\"isOnSearch\"><YoutubeSearchedForRoundedIcon titleAccess='Your last searches' className=\"search-icon pos a\" /></NavLink>}\r\n            {!currTrack && isOnMainPage() && < TrackList tracks={currTracks} isTile={isTile} onChooseTrack={onChooseTrack} />}\r\n            <Switch>\r\n                <Route path='/searches' exact component={RecentSearches} />\r\n                <Route path=\"/track/:key\" component={TrackDetails} />\r\n            </Switch>\r\n            {!currTrack && isOnMainPage() && <BtnsControl backOrNext={onBackOrNext} onSetDisplay={onSetDisplay} isTile={isTile} isOnMainPage={true} />}\r\n\r\n        </section>\r\n    )\r\n}","import React from 'react';\n\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\n\nexport const ToggleWrapper = ({ value, onUpdate }) => {\n    return (\n        <div className=\"toggle-wrapper pos a\">\n            <div className=\"toggle checkcross pa\">\n                <input type=\"text\" />\n                <label className=\"toggle-item\" style={{ backgroundColor: value ? '#969696b5' : '#ffeaab' }} onClick={() => onUpdate(!value)}>\n                    <div className={value ? 'check' : 'uncheck'}>{value ? <NightsStayIcon /> : <WbSunnyIcon />}</div>\n                </label>\n            </div>\n        </div>\n    );\n}\n","import { Route } from 'react-router-dom'\nimport { useEffect } from \"react\";\nimport { TrackApp } from './pages/TrackApp';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadPrefs, setMode } from './store/actions/prefsAction';\nimport MusicNoteRoundedIcon from '@material-ui/icons/MusicNoteRounded';\nimport { ToggleWrapper } from './cmps/ToggleWrapper';\n\n\nexport const App = () => {\n\n  const dispatch = useDispatch()\n  const { isDarkMode } = useSelector(state => state.prefsModule)\n\n  useEffect(() => {\n    dispatch(loadPrefs())\n    console.log(isDarkMode);\n  }, [isDarkMode])\n\n  return (\n    <div className={`App ${isDarkMode ? 'dark' : ''}`}>\n      <MusicNoteRoundedIcon className='music-icon pos a' />\n      <Router><Route path='/' component={TrackApp} /></Router>\n      <ToggleWrapper value={isDarkMode} onUpdate={(val) => { dispatch(setMode(val)) }} />\n    </div>\n  );\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    isTile: false,\r\n    isDarkMode: false\r\n}\r\nexport function prefsReducer(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case 'SET_PREFS':\r\n            const { isDarkMode, isTile } = action.prefs\r\n            return { ...state, isDarkMode, isTile }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    tracks: [],\r\n    currTrack: null,\r\n    searches: ['adele'],\r\n    lastSearch: 'adele'\r\n}\r\nexport function trackReducer(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case 'SET_TRACKS':\r\n            return { ...state, tracks: action.tracks }\r\n        case 'SET_TRACK':\r\n            return { ...state, currTrack: action.choosedTrack }\r\n        case 'SET_SEARCHES':\r\n            return { ...state, searches: action.searches }\r\n        case 'SET_LAST_SEARCH':\r\n            return { ...state, lastSearch: action.search }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { prefsReducer } from './reducers/prefReducer';\r\nimport { trackReducer } from './reducers/trackReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    trackModule: trackReducer,\r\n    prefsModule: prefsReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n\r\n// For Debug\r\nwindow.myStore = store;\r\nstore.subscribe(() => {\r\n    console.log('Global State is:', store.getState().trackModule)\r\n})\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.scss'\nimport { App } from './App.jsx';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store.js'\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}